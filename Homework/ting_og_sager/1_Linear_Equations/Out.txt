-- Part A --

1) Check that my decomp works as intended:

1.1) generate a random tall (n>m) matrix A (of a modest size);
Matrix A:
     0.249      0.111      0.467      0.772      0.658 
     0.433      0.354      0.944      0.101      0.642 
     0.029      0.248       0.32       0.99      0.682 
     0.655      0.283      0.615      0.704      0.702 
      0.95      0.093      0.161      0.382      0.798 
     0.169      0.794      0.307      0.823      0.886 
     0.556      0.717      0.699      0.014      0.992 
     0.806      0.859      0.063      0.514      0.525 

1.2) factorize it into QR;
Matrix Q:
     0.155     -0.051      0.324      0.425      0.023 
      0.27      0.068      0.629     -0.312     -0.285 
     0.018      0.223      0.206      0.603      0.131 
     0.409     -0.143      0.261      0.228      -0.39 
     0.593     -0.515     -0.209      0.113      0.475 
     0.106      0.663     -0.062      0.258      0.262 
     0.347      0.341      0.212     -0.475      0.471 
     0.503       0.32     -0.544     -0.029     -0.482 

1.3) check that R is upper triangular;
Matrix R:
     1.603      1.053      0.986      1.029      1.749 
         0       1.03      0.403      0.605      0.744 
         0          0      1.034      0.294      0.644 
         0          0          0      1.288      0.482 
         0          0          0          0      0.474 

1.4) check that Q^TQ=1;
Q^T * Q:
         1          0          0          0          0 
         0          1          0          0          0 
         0          0          1          0          0 
         0          0          0          1          0 
         0          0          0          0          1 

Q^T * Q ≈ 1 ?
True
1.5) check that QR=A;
QR:
     0.249      0.111      0.467      0.772      0.658 
     0.433      0.354      0.944      0.101      0.642 
     0.029      0.248       0.32       0.99      0.682 
     0.655      0.283      0.615      0.704      0.702 
      0.95      0.093      0.161      0.382      0.798 
     0.169      0.794      0.307      0.823      0.886 
     0.556      0.717      0.699      0.014      0.992 
     0.806      0.859      0.063      0.514      0.525 

A ≈ QR ?
True
 
2) Check that you solve works as intended:

2.1) generate a random square matrix A (of a modest size);
A:
     0.771      0.404      0.166      0.985      0.109 
     0.802      0.446      0.225      0.011      0.765 
     0.008       0.51      0.382      0.279      0.703 
     0.731      0.089      0.083      0.339       0.33 
     0.896      0.813      0.654      0.927      0.099 

2.2) generate a random vector b;
b:
     0.307      0.029      0.235      0.731      0.692 

2.4) factorize A into QR;
x:
     0.405     -3.543      3.756      0.753       0.56 

2.5) check that Ax=b;
A*x:
     0.307      0.029      0.235      0.731      0.692 

A*x ≈ b ?
True

-- Part B --

1) Check that my function works as intended:

1.1) generate a random square matrix A (of a modest size);
A:
     0.294      0.698      0.865      0.198       0.56 
     0.181       0.25      0.947      0.349       0.38 
     0.502      0.809      0.695       0.03      0.082 
     0.904      0.123      0.855      0.758      0.476 
     0.216      0.584      0.499      0.081      0.994 

1.3) calculate the inverse B;
B:
      -6.9      2.057      3.357      0.448      2.613 
      8.53     -4.584     -2.589      0.296     -2.986 
    -5.329      4.058      2.284     -0.734      1.617 
    14.092     -6.759     -6.252      1.584     -5.605 
    -1.985      0.759      0.155     -0.031      1.837 

1.4) check that AB=I, where I is the identity matrix;
A * A⁻¹:
         1          0          0          0          0 
         0          1          0          0          0 
         0          0          1          0          0 
         0          0          0          1          0 
         0          0          0          0          1 

A * A⁻¹ ≈ I ?
True
