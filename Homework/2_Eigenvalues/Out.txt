------------ TASK A: Jacobi diagonalization with cyclic sweeps ------------

------ Prove that the implementation works as intended ------

--- Generate a random symmetric matrix A (5x5) ---

Matrix A:
      0.03649      0.47965      0.39525      0.22889      0.36992
      0.47965      0.06158      0.65868      0.28116      0.41028
      0.39525      0.65868      0.04234      0.59004      0.44242
      0.22889      0.28116      0.59004      0.72005      0.65858
      0.36992      0.41028      0.44242      0.65858      0.09208


--- Apply your routine to perform the eigenvalue-decomposition, A=VDVᵀ ---
--- (where V is the orthogonal matrix of eigenvectors                  ---
--- and D is the diagonal matrix with the corresponding eigenvalues)   ---

The orthogonal matrix V of eigenvectors:

Matrix V:
      0.07296      0.59005      0.57115      0.45843      0.33189
     -0.66178     -0.17644     -0.35977      0.48843      0.40364
      0.69969      0.00101     -0.51140      0.19072      0.46101
     -0.23165      0.33543     -0.07278     -0.71344      0.56527
      0.11618     -0.71288      0.52682     -0.07687      0.44144


The diagonal matrix D with the corresponding eigenvalues:

Matrix D:
     -0.66132      0.00000      0.00000      0.00000      0.00000
      0.00000     -0.42307      0.00000      0.00000      0.00000
      0.00000      0.00000     -0.30750      0.00000      0.00000
      0.00000      0.00000      0.00000      0.29371      0.00000
      0.00000      0.00000      0.00000      0.00000      2.05072


The vector w of the eigenvalues:

Vector w:
     -0.66132
     -0.42307
     -0.30750
      0.29371
      2.05072


The matrix Vᵀ (which is the transpose of V)

Matrix Vᵀ:
      0.07296     -0.66178      0.69969     -0.23165      0.11618
      0.59005     -0.17644      0.00101      0.33543     -0.71288
      0.57115     -0.35977     -0.51140     -0.07278      0.52682
      0.45843      0.48843      0.19072     -0.71344     -0.07687
      0.33189      0.40364      0.46101      0.56527      0.44144


--- Check that VᵀAV≈D ---

Matrix VᵀAV:
     -0.66132      0.00000      0.00000      0.00000      0.00000
      0.00000     -0.42307      0.00000      0.00000      0.00000
      0.00000      0.00000     -0.30750      0.00000      0.00000
      0.00000      0.00000      0.00000      0.29371      0.00000
      0.00000      0.00000      0.00000      0.00000      2.05072

TEST: is VᵀAV=D (within a tolerance of 1E-12)?
RESULT: No.

--- Check that VDVᵀ≈A ---

Matrix VDVᵀ:
      0.03649      0.47965      0.39525      0.22889      0.36992
      0.47965      0.06158      0.65868      0.28116      0.41028
      0.39525      0.65868      0.04234      0.59004      0.44242
      0.22889      0.28116      0.59004      0.72005      0.65858
      0.36992      0.41028      0.44242      0.65858      0.09208

TEST: is VDVᵀ=A (within a tolerance of 1E-12)?
RESULT: No.

--- Check that VᵀV≈I ---

Matrix VᵀV:
      1.00000      0.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      0.00000      1.00000

TEST: is VᵀV the identity matrix (within a tolerance of 1E-12)? 
RESULT: Yes.

--- Check that VVᵀ≈I ---

Matrix VVᵀ:
      1.00000      0.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      0.00000      1.00000

TEST: is VVᵀ the identity matrix (within a tolerance of 1E-12)? 
RESULT: Yes.

------------ TASK B: Hydrogen atom, s-wave radial Schrödinger equation on a grid -----------

------ Calculate numerically the lowest egenvalues and eigenfunctions ------
------ of the s-wave states in the hydrogen atom                      ------
------ and compare them with the exact results                        ------

Numerically calculated lowest eigenvalues:
ε_0 = -0.489228
ε_1 = -0.111120
ε_2 = 0.096284
ε_3 = 0.411759
ε_4 = 0.829649

numerically_eigenfunctions_ni.txt (for i = 1, 2, 3) contains the data for the numerically calculated eigenfunctions with n = 1, 2, 3, respectively.
eigenfunctions.svg is a plot of the numerically calculated eigenfunctions.

analytic_eigenfunctions_ni.txt (for i = 1, 2, 3) contains the data for the (exact) analytically computed eigenfunctions with n = 1, 2, 3, respectively.
eigenfunctions.svg also contains the exact results for comparison.

------ Fix r_max and calculate ε₀ for several different values of Δr ------
------ and plot the resulting curve                                  ------

r_max is fixed to 10.
varying_dr.txt contains the data for the calculated ε₀.
varying_dr.svg is a plot of the resulting curve.

------ Fix Δr and calculate ε₀ for several different values of r_max ------
------ and plot the resulting curve                                  ------


Δr is fixed to 0.3.
varying_rmax.txt contains the data for the calculated ε₀.
varying_rmax.svg is a plot of the resulting curve.

------------ TASK C: Scaling and optimization ------------

------ Check that the number of operations for matrix diagonalization scales as O(n³) ------
------ do the measurements in parallel                                                ------

The file 'number_of_operations.txt' contains timing data for Jacobi diagonalization of random matrices of size N.
The plot 'number_of_operations.svg' shows the data along with a fitted curve f(N) = a * N³.

Timing data are written by NumberOfOperations.exe to number_of_operations.txt.
