------------ TASKÂ A: Jacobi diagonalization with cyclic sweeps ------------

------ Prove that the implementation works as intended ------

--- Generate a random symmetric matrix A (5x5) ---

Matrix A:
      0.84292      0.73549      0.17190      0.90852      0.81859
      0.73549      0.59406      0.58975      0.44478      0.39988
      0.17190      0.58975      0.12567      0.84156      0.76696
      0.90852      0.44478      0.84156      0.37919      0.32558
      0.81859      0.39988      0.76696      0.32558      0.45250


--- Apply your routine to perform the eigenvalue-decomposition, A=VDVáµ€ ---
--- (where V is the orthogonal matrix of eigenvectors                  ---
--- and D is the diagonal matrix with the corresponding eigenvalues)   ---

The orthogonal matrix V of eigenvectors:

Matrix V:
      0.41647      0.04793      0.15411      0.70963      0.54491
     -0.18492     -0.45650     -0.75865     -0.02288      0.42584
      0.63273      0.10793      0.01137     -0.66889      0.37479
     -0.48748      0.74035     -0.07254     -0.09200      0.44779
     -0.39290     -0.47911      0.62873     -0.20006      0.42515


The diagonal matrix D with the corresponding eigenvalues:

Matrix D:
     -1.05816      0.00000      0.00000      0.00000      0.00000
      0.00000      0.07574      0.00000      0.00000      0.00000
      0.00000      0.00000      0.14695      0.00000      0.00000
      0.00000      0.00000      0.00000      0.30861      0.00000
      0.00000      0.00000      0.00000      0.00000      2.92121


The vector w of the eigenvalues:

Vector w:
     -1.05816
      0.07574
      0.14695
      0.30861
      2.92121


The matrix Váµ€ (which is the transpose of V)

Matrix Váµ€:
      0.41647     -0.18492      0.63273     -0.48748     -0.39290
      0.04793     -0.45650      0.10793      0.74035     -0.47911
      0.15411     -0.75865      0.01137     -0.07254      0.62873
      0.70963     -0.02288     -0.66889     -0.09200     -0.20006
      0.54491      0.42584      0.37479      0.44779      0.42515


--- Check that Váµ€AVâ‰ˆD ---

Matrix Váµ€AV:
     -1.05816      0.00000      0.00000      0.00000      0.00000
      0.00000      0.07574      0.00000      0.00000      0.00000
      0.00000      0.00000      0.14695      0.00000      0.00000
      0.00000      0.00000      0.00000      0.30861      0.00000
      0.00000      0.00000      0.00000      0.00000      2.92121

TEST: is Váµ€AV=D (within a tolerance of 1E-05)?
RESULT: Yes.

--- Check that VDVáµ€â‰ˆA ---

Matrix VDVáµ€:
      0.84292      0.73549      0.17190      0.90852      0.81859
      0.73549      0.59406      0.58975      0.44478      0.39988
      0.17190      0.58975      0.12567      0.84156      0.76696
      0.90852      0.44478      0.84156      0.37919      0.32558
      0.81859      0.39988      0.76696      0.32558      0.45250

TEST: is VDVáµ€=A (within a tolerance of 1E-05)?
RESULT: Yes.

--- Check that Váµ€Vâ‰ˆI ---

Matrix Váµ€V:
      1.00000      0.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      0.00000      1.00000

TEST: is Váµ€V the identity matrix (within a tolerance of 1E-12)? 
RESULT: Yes.

--- Check that VVáµ€â‰ˆI ---

Matrix VVáµ€:
      1.00000      0.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      0.00000      1.00000

TEST: is VVáµ€ the identity matrix (within a tolerance of 1E-12)? 
RESULT: Yes.

------------ TASK B: Hydrogen atom, s-wave radial SchrÃ¶dinger equation on a grid -----------

------ Calculate numerically the lowest egenvalues and eigenfunctions ------
------ of the s-wave states in the hydrogen atom                      ------
------ and compare them with the exact results                        ------

Numerically calculated lowest eigenvalues:
Îµ_0 = -0.489228
Îµ_1 = -0.111120
Îµ_2 = 0.096284
Îµ_3 = 0.411759
Îµ_4 = 0.829649

numerically_eigenfunctions_ni.txt (for i = 1, 2, 3) contains the data for the numerically calculated eigenfunctions with n = 1, 2, 3, respectively.
eigenfunctions.svg is a plot of the numerically calculated eigenfunctions.

analytic_eigenfunctions_ni.txt (for i = 1, 2, 3) contains the data for the (exact) analytically computed eigenfunctions with n = 1, 2, 3, respectively.
eigenfunctions.svg also contains the exact results for comparison.

------ Fix r_max and calculate Îµâ‚€ for several different values of Î”r ------
------ and plot the resulting curve                                  ------

r_max is fixed to 10.
varying_dr.txt contains the data for the calculated Îµâ‚€.
varying_dr.svg is a plot of the resulting curve.

------ Fix Î”r and calculate Îµâ‚€ for several different values of r_max ------
------ and plot the resulting curve                                  ------


Î”r is fixed to 0.3.
varying_rmax.txt contains the data for the calculated Îµâ‚€.
varying_rmax.svg is a plot of the resulting curve.

------------ TASK C: Scaling and optimization ------------

------ Check that the number of operations for matrix diagonalization scales as O(nÂ³) ------
------ do the measurements in parallel                                                ------

The file 'number_of_operations.txt' contains timing data for Jacobi diagonalization of random matrices of size N.
The plot 'number_of_operations.svg' shows the data along with a fitted curve f(N) = a * NÂ³.


------------ POINTS: received from tasks A, B, and C ------------

Task A completed â†’ 6 pointsðŸ˜Š
Task B completed â†’ 3 pointsðŸ˜„
Task C completed â†’ 1 point ðŸ˜Ž

In total, this exercise results in 10 points ðŸŽ‰ðŸŽ‰ðŸŽ‰
