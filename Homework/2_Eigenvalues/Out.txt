------------ TASKÂ A: Jacobi diagonalization with cyclic sweeps ------------

------ Prove that the implementation works as intended ------

--- Generate a random symmetric matrix A (5x5) ---

Matrix A:
      0.10412      0.59176      0.54317      0.45742      0.23653
      0.59176      0.11503      0.80821      0.78456      0.57596
      0.54317      0.80821      0.68181      0.84389      0.67285
      0.45742      0.78456      0.84389      0.95502      0.62078
      0.23653      0.57596      0.67285      0.62078      0.82498


--- Apply your routine to perform the eigenvalue-decomposition, A=VDVáµ€ ---
--- (where V is the orthogonal matrix of eigenvectors                  ---
--- and D is the diagonal matrix with the corresponding eigenvalues)   ---

The orthogonal matrix V of eigenvectors:

Matrix V:
      0.43838      0.63267      0.46478      0.32694      0.29092
     -0.85632      0.19259      0.19078      0.13090      0.41963
      0.19477     -0.72485      0.40240      0.11430      0.51153
      0.15215      0.04615     -0.76501      0.31462      0.53897
      0.11598      0.18733     -0.02032     -0.87403      0.43258


The diagonal matrix D with the corresponding eigenvalues:

Matrix D:
     -0.58915      0.00000      0.00000      0.00000      0.00000
      0.00000     -0.23464      0.00000      0.00000      0.00000
      0.00000      0.00000      0.05406      0.00000      0.00000
      0.00000      0.00000      0.00000      0.33879      0.00000
      0.00000      0.00000      0.00000      0.00000      3.11190


The vector w of the eigenvalues:

Vector w:
     -0.58915
     -0.23464
      0.05406
      0.33879
      3.11190


The matrix Váµ€ (which is the transpose of V)

Matrix Váµ€:
      0.43838     -0.85632      0.19477      0.15215      0.11598
      0.63267      0.19259     -0.72485      0.04615      0.18733
      0.46478      0.19078      0.40240     -0.76501     -0.02032
      0.32694      0.13090      0.11430      0.31462     -0.87403
      0.29092      0.41963      0.51153      0.53897      0.43258


--- Check that Váµ€AVâ‰ˆD ---

Matrix Váµ€AV:
     -0.58915      0.00000      0.00000      0.00000      0.00000
      0.00000     -0.23464      0.00000      0.00000      0.00000
      0.00000      0.00000      0.05406      0.00000      0.00000
      0.00000      0.00000      0.00000      0.33879      0.00000
      0.00000      0.00000      0.00000      0.00000      3.11190

TEST: is Váµ€AV=D (within a tolerance of 1E-05)?
RESULT: Yes.

--- Check that VDVáµ€â‰ˆA ---

Matrix VDVáµ€:
      0.10412      0.59176      0.54317      0.45742      0.23653
      0.59176      0.11503      0.80821      0.78456      0.57596
      0.54317      0.80821      0.68181      0.84389      0.67285
      0.45742      0.78456      0.84389      0.95502      0.62078
      0.23653      0.57596      0.67285      0.62078      0.82498

TEST: is VDVáµ€=A (within a tolerance of 1E-05)?
RESULT: Yes.

--- Check that Váµ€Vâ‰ˆI ---

Matrix Váµ€V:
      1.00000      0.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      0.00000      1.00000

TEST: is Váµ€V the identity matrix (within a tolerance of 1E-12)? 
RESULT: Yes.

--- Check that VVáµ€â‰ˆI ---

Matrix VVáµ€:
      1.00000      0.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      0.00000      1.00000

TEST: is VVáµ€ the identity matrix (within a tolerance of 1E-12)? 
RESULT: Yes.

------------ TASK B: Hydrogen atom, s-wave radial SchrÃ¶dinger equation on a grid -----------

------ Calculate numerically the lowest egenvalues and eigenfunctions ------
------ of the s-wave states in the hydrogen atom                      ------
------ and compare them with the exact results                        ------

Numerically calculated lowest eigenvalues:
Îµ_0 = -0.489228
Îµ_1 = -0.111120
Îµ_2 = 0.096284
Îµ_3 = 0.411759
Îµ_4 = 0.829649

numerically_eigenfunctions_ni.txt (for i = 1, 2, 3) contains the data for the numerically calculated eigenfunctions with n = 1, 2, 3, respectively.
eigenfunctions.svg is a plot of the numerically calculated eigenfunctions.

analytic_eigenfunctions_ni.txt (for i = 1, 2, 3) contains the data for the (exact) analytically computed eigenfunctions with n = 1, 2, 3, respectively.
eigenfunctions.svg also contains the exact results for comparison.

------ Fix r_max and calculate Îµâ‚€ for several different values of Î”r ------
------ and plot the resulting curve                                  ------

r_max is fixed to 10.
varying_dr.txt contains the data for the calculated Îµâ‚€.
varying_dr.svg is a plot of the resulting curve.

------ Fix Î”r and calculate Îµâ‚€ for several different values of r_max ------
------ and plot the resulting curve                                  ------


Î”r is fixed to 0.3.
varying_rmax.txt contains the data for the calculated Îµâ‚€.
varying_rmax.svg is a plot of the resulting curve.

------------ TASK C: Scaling and optimization ------------

------ Check that the number of operations for matrix diagonalization scales as O(nÂ³) ------
------ do the measurements in parallel                                                ------

The file 'number_of_operations.txt' contains timing data for Jacobi diagonalization of random matrices of size N.
The plot 'number_of_operations.svg' shows the data along with a fitted curve f(N) = a * NÂ³.


------------ POINTS: received from tasks A, B, and C ------------

Task A completed â†’ 6 pointsðŸ˜Š
Task B completed â†’ 3 pointsðŸ˜„
Task C not completed â†’ 0 pointsðŸ˜¢

In total, this exercise results in 9 points ðŸŽ‰ðŸŽ‰
