------------ TASKÂ A: Jacobi diagonalization with cyclic sweeps ------------

------ Prove that the implementation works as intended ------

--- Generate a random symmetric matrix A (5x5) ---

Matrix A:
      0.22210      0.67291      0.58467      0.64553      0.46234
      0.67291      0.76482      0.43659      0.14167      0.59693
      0.58467      0.43659      0.64195      0.51983      0.55025
      0.64553      0.14167      0.51983      0.56310      0.36570
      0.46234      0.59693      0.55025      0.36570      0.26805


--- Apply your routine to perform the eigenvalue-decomposition, A=VDVáµ€ ---
--- (where V is the orthogonal matrix of eigenvectors                  ---
--- and D is the diagonal matrix with the corresponding eigenvalues)   ---

The orthogonal matrix V of eigenvectors:

Matrix V:
      0.79500      0.27104     -0.28294      0.04493      0.46091
     -0.39916      0.22613     -0.24465     -0.71025      0.47457
     -0.12652      0.30896      0.77275      0.22970      0.48850
     -0.42034     -0.05982     -0.48901      0.65062      0.39660
      0.12628     -0.88111      0.15434     -0.13209      0.40794


The diagonal matrix D with the corresponding eigenvalues:

Matrix D:
     -0.47668      0.00000      0.00000      0.00000      0.00000
      0.00000     -0.19549      0.00000      0.00000      0.00000
      0.00000      0.00000      0.07060      0.00000      0.00000
      0.00000      0.00000      0.00000      0.56230      0.00000
      0.00000      0.00000      0.00000      0.00000      2.49928


The vector w of the eigenvalues:

Vector w:
     -0.47668
     -0.19549
      0.07060
      0.56230
      2.49928


The matrix Váµ€ (which is the transpose of V)

Matrix Váµ€:
      0.79500     -0.39916     -0.12652     -0.42034      0.12628
      0.27104      0.22613      0.30896     -0.05982     -0.88111
     -0.28294     -0.24465      0.77275     -0.48901      0.15434
      0.04493     -0.71025      0.22970      0.65062     -0.13209
      0.46091      0.47457      0.48850      0.39660      0.40794


--- Check that Váµ€AVâ‰ˆD ---

Matrix Váµ€AV:
     -0.47668      0.00000      0.00000      0.00000      0.00000
      0.00000     -0.19549      0.00000      0.00000      0.00000
      0.00000      0.00000      0.07060      0.00000      0.00000
      0.00000      0.00000      0.00000      0.56230      0.00000
      0.00000      0.00000      0.00000      0.00000      2.49928

TEST: is Váµ€AV=D (within a tolerance of 1E-05)?
RESULT: Yes.

--- Check that VDVáµ€â‰ˆA ---

Matrix VDVáµ€:
      0.22210      0.67291      0.58467      0.64553      0.46234
      0.67291      0.76482      0.43659      0.14167      0.59693
      0.58467      0.43659      0.64195      0.51983      0.55025
      0.64553      0.14167      0.51983      0.56310      0.36570
      0.46234      0.59693      0.55025      0.36570      0.26805

TEST: is VDVáµ€=A (within a tolerance of 1E-05)?
RESULT: Yes.

--- Check that Váµ€Vâ‰ˆI ---

Matrix Váµ€V:
      1.00000      0.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      0.00000      1.00000

TEST: is Váµ€V the identity matrix (within a tolerance of 1E-12)? 
RESULT: Yes.

--- Check that VVáµ€â‰ˆI ---

Matrix VVáµ€:
      1.00000      0.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      0.00000      1.00000

TEST: is VVáµ€ the identity matrix (within a tolerance of 1E-12)? 
RESULT: Yes.

------------ TASK B: Hydrogen atom, s-wave radial SchrÃ¶dinger equation on a grid -----------

------ Calculate numerically the lowest egenvalues and eigenfunctions ------
------ of the s-wave states in the hydrogen atom                      ------
------ and compare them with the exact results                        ------

Numerically calculated lowest eigenvalues:
Îµ_0 = -0.489228
Îµ_1 = -0.111120
Îµ_2 = 0.096284
Îµ_3 = 0.411759
Îµ_4 = 0.829649

numerically_eigenfunctions_ni.txt (for i = 1, 2, 3) contains the data for the numerically calculated eigenfunctions with n = 1, 2, 3, respectively.
eigenfunctions.svg is a plot of the numerically calculated eigenfunctions.

analytic_eigenfunctions_ni.txt (for i = 1, 2, 3) contains the data for the (exact) analytically computed eigenfunctions with n = 1, 2, 3, respectively.
eigenfunctions.svg also contains the exact results for comparison.

------ Fix r_max and calculate Îµâ‚€ for several different values of Î”r ------
------ and plot the resulting curve                                  ------

r_max is fixed to 10.
varying_dr.txt contains the data for the calculated Îµâ‚€.
varying_dr.svg is a plot of the resulting curve.

------ Fix Î”r and calculate Îµâ‚€ for several different values of r_max ------
------ and plot the resulting curve                                  ------


Î”r is fixed to 0.3.
varying_rmax.txt contains the data for the calculated Îµâ‚€.
varying_rmax.svg is a plot of the resulting curve.

------------ TASK C: Scaling and optimization ------------

------ Check that the number of operations for matrix diagonalization scales as O(nÂ³) ------
------ do the measurements in parallel                                                ------

The file 'number_of_operations.txt' contains timing data for Jacobi diagonalization of random matrices of size N.
The plot 'number_of_operations.svg' shows the data along with a fitted curve f(N) = a * NÂ³.


------------ POINTS: received from tasks A, B, and C ------------

Task A completed â†’ 6 pointsðŸ˜Š
Task B completed â†’ 3 pointsðŸ˜„
Task C completed â†’ 1 point ðŸ˜Ž

In total, this exercise results in 10 points ðŸŽ‰ðŸŽ‰ðŸŽ‰
