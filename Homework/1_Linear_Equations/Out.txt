------------ TASK A: Solving linear equations using QR-decomposition ------------
------------ by modified Gram-Schmidt orthogonalization              ------------

------ Check that "decomp" works as intended ------

--- Generate a random tall (6x4) matrix A ---

Matrix A:
     -0.65455     -0.38852     -0.41199      0.30516
     -0.53776     -0.89225      0.50377     -0.45545
     -0.87810     -0.26386     -0.87961      0.30612
      0.32221      0.50972      0.08597      0.82832
      0.15921      0.89983     -0.85630     -0.89867
      0.92330      0.91340     -0.05595     -0.18776

--- Factorize A into QR ---

Matrix Q:
     -0.41645      0.16379     -0.11037      0.22935
     -0.34215     -0.41012      0.30615     -0.53194
     -0.55868      0.46434     -0.17964      0.25968
      0.20500      0.22208      0.83723      0.40525
      0.10130      0.72563      0.11807     -0.65400
      0.58744      0.11623     -0.38331      0.07109

Matrix R:
      1.57173      1.34671      0.38866     -0.17380
      0.00000      1.05208     -1.29129     -0.11106
      0.00000      0.00000      0.35004      0.43125
      0.00000      0.00000      0.00000      1.30182


--- Check that R is upper triangular ---

R is upper-triangular (tol=1E-09).

--- Check that Qáµ€Q â‰ˆ I ---

Matrix Qáµ€Q:
      1.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      1.00000

Qáµ€Q â‰ˆ I (tol=1E-06).

--- Check that QR â‰ˆ A ---

Matrix QR:
     -0.65455     -0.38852     -0.41199      0.30516
     -0.53776     -0.89225      0.50377     -0.45545
     -0.87810     -0.26386     -0.87961      0.30612
      0.32221      0.50972      0.08597      0.82832
      0.15921      0.89983     -0.85630     -0.89867
      0.92330      0.91340     -0.05595     -0.18776

QR â‰ˆ A (tol=1E-06).

------ Check that "solve" works as intended ------

--- Generate a random square matrix A (4Ã—4) ---

Matrix A:
     -0.80612     -0.03952      0.55277     -0.66893
      0.64470     -0.22886      0.42243      0.74549
     -0.52564      0.47135      0.76807     -0.38087
      0.67070      0.09638      0.67100     -0.29372

--- Generate a random vector b (4) ---

Vector b:
      0.63132
     -0.41170
     -0.85109
     -0.69025


--- Factorize A into QR --- 

Matrix Q:
     -0.60225     -0.35843      0.65545     -0.28144
      0.48166     -0.25000      0.57054      0.61644
     -0.39270      0.79053      0.24394      0.40167
      0.50108      0.42905      0.43054     -0.61601

Matrix R:
      1.33851     -0.22324     -0.09484      0.76433
      0.00000      0.48535      0.59134     -0.37372
      0.00000      0.00000      1.07959     -0.23248
      0.00000      0.00000      0.00000      0.67576


--- Solve QRx=b ---

Solving QRx=b leads to:

Vector x:
     -0.53363
     -2.14430
     -0.41280
     -0.51515


--- Check that Axâ‰ˆb ---

Vector Ax:
      0.63132
     -0.41170
     -0.85109
     -0.69025

Ax â‰ˆ b (tol=1E-06).

------------ TASK B: Matrix inverse by Gram-Schmidt QR factorization ------------

------ Check that "inverse" works as intended ------

--- Generate a random square matrix A (4Ã—4) ---

Matrix A:
      0.19978      0.56020      0.96481     -0.92726
      0.86410     -0.08200     -0.74930     -0.50591
      0.86522      0.96586      0.85758     -0.83797
     -0.61704      0.68262     -0.63738      0.75353


--- Factorize A into QR ---

Matrix Q:
      0.14433      0.40392      0.44890     -0.78390
      0.62427     -0.22646     -0.64805     -0.37286
      0.62508      0.59888      0.11215      0.48790
     -0.44579      0.65338     -0.60493     -0.09182

Matrix R:
      1.38417      0.32911      0.49168     -1.30937
      0.00000      1.26929      0.65653     -0.26947
      0.00000      0.00000      1.40044     -0.63820
      0.00000      0.00000      0.00000      0.43748


--- Calculate B, which is the inverse of A ---

Matrix B:
     -1.46077     -0.07211      1.20146     -0.50987
      0.19439      0.08090      0.40428      0.74310
     -0.49603     -0.85115      0.58832     -0.52760
     -1.79185     -0.85228      1.11524     -0.20988


--- Check that ABâ‰ˆI, where I is the identity matrix ---

Matrix AB:
      1.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      1.00000

AB â‰ˆ I (tol=1E-06).

------------ TASK C: ------------

out.times.data contains the data on how long it takes to QR-factorize a random NxN matrix.
QR_factorize_time.svg is a plot showing how long it takes to QR-factorize a random NxN matrix, using the data from out.times.data.
The time it takes to QR-factorize grows like O(NÂ³), as shown by the fit in QR_factorize_time.svg.

------------ POINTS: received from tasks A, B, and C ------------

Task A completed â†’ 6 pointsðŸ˜Š
Task B completed â†’ 3 pointsðŸ˜„
Task C completed â†’ 1 point ðŸ˜Ž

In total, this exercise results in 10 points ðŸŽ‰ðŸŽ‰ðŸŽ‰
