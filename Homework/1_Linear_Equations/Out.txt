------------ TASK A: Solving linear equations using QR-decomposition ------------
------------ by modified Gram-Schmidt orthogonalization              ------------

------ Check that "decomp" works as intended ------

--- Generate a random tall (6x4) matrix A ---

Matrix A:
      0.67414      0.32918      0.92153      0.53682
      0.40046      0.81146      0.32364      0.63613
      0.64718      0.11587      0.76820      0.42613
      0.68050      0.39094      0.78040      0.56617
      0.61201      0.76996      0.39578      0.52383
      0.59727      0.04723      0.96501      0.23890

--- Factorize A into QR ---

Matrix Q:
      0.45164     -0.11114      0.35297      0.17472
      0.26828      0.68966      0.43932      0.28265
      0.43357     -0.35225     -0.44861      0.39014
      0.45589     -0.04021     -0.10600      0.29959
      0.41002      0.47712     -0.51997     -0.54721
      0.40014     -0.39835      0.44672     -0.59006

Matrix R:
      1.49266      0.92943      1.74029      1.16635
      0.00000      0.81506     -0.37677      0.36094
      0.00000      0.00000      0.26540      0.05211
      0.00000      0.00000      0.00000      0.18185


--- Check that R is upper triangular ---

TEST: Is R upperâ€‘triangular? RESULT: Yes.

--- Check that Qáµ€Q â‰ˆ I ---

Matrix Qáµ€Q:
      1.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      1.00000

TEST: is Qáµ€Q the identity matrix (within a tolerance of 1E-12)? 
RESULT: Yes.

--- Check that QR â‰ˆ A ---

Matrix QR:
      0.67414      0.32918      0.92153      0.53682
      0.40046      0.81146      0.32364      0.63613
      0.64718      0.11587      0.76820      0.42613
      0.68050      0.39094      0.78040      0.56617
      0.61201      0.76996      0.39578      0.52383
      0.59727      0.04723      0.96501      0.23890

TEST: is QR=A (within a tolerance of 1E-12)?
RESULT: Yes.

------ Check that "solve" works as intended ------

--- Generate a random square matrix A (4Ã—4) ---

Matrix A:
      0.12038      0.30394      0.67474      0.78265
      0.90569      0.85534      0.82698      0.68295
      0.83356      0.25758      0.03885      0.43978
      0.52091      0.97675      0.37805      0.22791

--- Generate a random vector b (4) ---

Vector b:
      0.44319
      0.19251
      0.71670
      0.90332


--- Factorize A into QR --- 

Matrix Q:
      0.08970      0.27492      0.74442      0.60184
      0.67488      0.11402      0.37973     -0.62236
      0.62114     -0.61821     -0.20058      0.43792
      0.38816      0.72749     -0.51128      0.24224

Matrix R:
      1.34199      1.14365      0.78951      0.89274
      0.00000      0.73242      0.53080      0.18696
      0.00000      0.00000      0.61524      0.63722
      0.00000      0.00000      0.00000      0.29378


--- Solve QRx=b ---

Solving QRx=b leads to:

Vector x:
     -0.81244
      1.87312
     -2.72518
      2.31326


--- Check that Axâ‰ˆb ---

Vector Ax:
      0.44319
      0.19251
      0.71670
      0.90332

TEST: is Ax=b (within a tolerance of 1E-12)?
RESULT: OK

------------ TASK B: Matrix inverse by Gram-Schmidt QR factorization ------------

------ Check that "inverse" works as intended ------

--- Generate a random square matrix A (4Ã—4) ---

Matrix A:
      0.48412      0.39721      0.73085      0.85772
      0.45578      0.05309      0.00185      0.58983
      0.99351      0.99912      0.13045      0.45937
      0.57661      0.11400      0.65338      0.23495


--- Factorize A into QR ---

Matrix Q:
      0.36475      0.09387      0.73916      0.55838
      0.34340     -0.55434     -0.51756      0.55400
      0.74853      0.56113     -0.30150     -0.18418
      0.43443     -0.60748      0.30800     -0.58938

Matrix R:
      1.32727      0.96051      0.64871      0.96133
      0.00000      0.49924     -0.25614     -0.13140
      0.00000      0.00000      0.70117      0.26258
      0.00000      0.00000      0.00000      0.58262


--- Calculate B, which is the inverse of A ---

Matrix B:
     -1.33591      1.13351      0.30776      1.42965
      0.79699     -1.42148      0.88088     -1.06332
      0.69527     -1.09424     -0.31162      0.81811
      0.95839      0.95088     -0.31612     -1.01161


--- Check that ABâ‰ˆI, where I is the identity matrix ---

Matrix AB:
      1.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      1.00000

TEST: is AB the identity matrix (within a tolerance of 1E-12)? 
RESULT: Yes.

------------ TASK C: Operations count for QR-decomposition ------------

------ Measure the time it takes to QR-factorize a random NxN matrix as function of N ------

QR_factorize_time.txt contains the data on how long it takes to QR-factorize a random NxN matrix.
QR_factorize_time.svg is a plot showing how long it takes to QR-factorize a random NxN matrix, using the data from QR_factorize_time.txt.
The time it takes to QR-factorize grows like O(NÂ³), as shown by the fit in QR_factorize_time.svg.

------------ POINTS: received from tasks A, B, and C ------------

Task A completed â†’ 6 pointsðŸ˜Š
Task B completed â†’ 3 pointsðŸ˜„
Task C completed â†’ 1 point ðŸ˜Ž

In total, this exercise results in 10 points ðŸŽ‰ðŸŽ‰ðŸŽ‰
