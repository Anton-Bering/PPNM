------------ TASK A: Solving linear equations using QR-decomposition ------------
------------ by modified Gram-Schmidt orthogonalization              ------------

------ Check that "decomp" works as intended ------

--- Generate a random tall (6x4) matrix A ---

Matrix A:
      0.37797      0.84621      0.83125      0.20389
      0.94552      0.41393      0.67905      0.34122
      0.10914      0.72776      0.70346      0.96235
      0.68988      0.96021      0.22949      0.22888
      0.14075      0.64625      0.02432      0.82720
      0.69090      0.65365      0.92307      0.25851

--- Factorize A into QR ---

Matrix Q:
      0.26582      0.42939      0.34801     -0.51255
      0.66496     -0.47130      0.05842      0.39828
      0.07676      0.56270      0.41201      0.45817
      0.48517      0.25345     -0.63521     -0.32672
      0.09899      0.46041     -0.39745      0.49934
      0.48589     -0.02567      0.37983     -0.11252

Matrix R:
      1.42193      1.40348      1.28875      0.67350
      0.00000      1.10189      0.47839      0.90047
      0.00000      0.00000      0.81395      0.11142
      0.00000      0.00000      0.00000      0.78150


--- Check that R is upper triangular ---

TEST: Is R upperâ€‘triangular? RESULT: Yes.

--- Check that Qáµ€Q â‰ˆ I ---

Matrix Qáµ€Q:
      1.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      1.00000

TEST: is Qáµ€Q the identity matrix (within a tolerance of 1E-12)? 
RESULT: Yes.

--- Check that QR â‰ˆ A ---

Matrix QR:
      0.37797      0.84621      0.83125      0.20389
      0.94552      0.41393      0.67905      0.34122
      0.10914      0.72776      0.70346      0.96235
      0.68988      0.96021      0.22949      0.22888
      0.14075      0.64625      0.02432      0.82720
      0.69090      0.65365      0.92307      0.25851

TEST: is QR = A?
RESULT: Yes  (|maximum difference| = 1.110E-016)

------ Check that "solve" works as intended ------

--- Generate a random square matrix A (4Ã—4) ---

Matrix A:
      0.63741      0.55452      0.12976      0.01497
      0.76959      0.51023      0.22971      0.34067
      0.00334      0.89317      0.10323      0.28492
      0.95754      0.14763      0.96365      0.99748

--- Generate a random vector b (4) ---

Vector b:
      0.35290
      0.64753
      0.64039
      0.49625


--- Factorize A into QR --- 

Matrix Q:
      0.46056      0.26170     -0.44958     -0.71922
      0.55606      0.15452     -0.44051      0.68766
      0.00241      0.90372      0.42301      0.06595
      0.69187     -0.30155      0.65184     -0.07414

Matrix R:
      1.38400      0.64340      0.85446      0.88714
      0.00000      0.98662     -0.12784      0.01326
      0.00000      0.00000      0.51229      0.61393
      0.00000      0.00000      0.00000      0.16834


--- Solve QRx=b ---

Solving QRx=b leads to:

Vector x:
      0.34232
      0.47063
     -1.10806
      1.16971


--- Check that Axâ‰ˆb ---

Vector Ax:
      0.35290
      0.64753
      0.64039
      0.49625

TEST: is Ax=b (within a tolerance of 1E-12)?
RESULT: OK

------------ TASK B: Matrix inverse by Gram-Schmidt QR factorization ------------

------ Check that "inverse" works as intended ------

--- Generate a random square matrix A (4Ã—4) ---

Matrix A:
      0.15120      0.62954      0.32378      0.04864
      0.79726      0.32316      0.93322      0.51637
      0.39569      0.00908      0.73882      0.07204
      0.70304      0.17706      0.75019      0.37765


--- Factorize A into QR ---

Matrix Q:
      0.13214      0.96264      0.17526     -0.15860
      0.69675      0.05087     -0.17748      0.69315
      0.34581     -0.22851      0.90463     -0.09921
      0.61441     -0.13611     -0.34558     -0.69610

Matrix R:
      1.14426      0.42027      1.40942      0.62316
      0.00000      0.59628      0.08822      0.00522
      0.00000      0.00000      0.30022     -0.14846
      0.00000      0.00000      0.00000      0.08018


--- Calculate B, which is the inverse of A ---

Matrix B:
      1.05776     -8.44002     -1.71444     11.73101
      1.69008     -0.53542     -0.72766      0.65325
     -0.39439      3.68384      2.40132     -5.44427
     -1.97806      8.64516     -1.23737     -8.68196


--- Check that ABâ‰ˆI, where I is the identity matrix ---

Matrix AB:
      1.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      1.00000

TEST: is AB the identity matrix (within a tolerance of 1E-12)? 
RESULT: Yes.

------------ TASK C: Operations count for QR-decomposition ------------

------ Measure the time it takes to QR-factorize a random NxN matrix as function of N ------

out.times.data contains the data on how long it takes to QR-factorize a random NxN matrix.
QR_factorize_time.svg is a plot showing how long it takes to QR-factorize a random NxN matrix, using the data from out.times.data.
The time it takes to QR-factorize grows like O(NÂ³), as shown by the fit in QR_factorize_time.svg.

------------ POINTS: received from tasks A, B, and C ------------

Task A completed â†’ 6 pointsðŸ˜Š
Task B completed â†’ 3 pointsðŸ˜„
Task C completed â†’ 1 point ðŸ˜Ž

In total, this exercise results in 10 points ðŸŽ‰ðŸŽ‰ðŸŽ‰
