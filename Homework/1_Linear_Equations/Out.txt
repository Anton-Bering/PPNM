------------ TASK A: Solving linear equations using QR-decomposition ------------
------------ by modified Gram-Schmidt orthogonalization              ------------

------ Check that "decomp" works as intended ------

--- Generate a random tall (6x4) matrix A ---

Matrix A:
      0.19800      0.29688      0.92835      0.64941
      0.99576      0.00749      0.79883      0.43628
      0.92357      0.55658      0.11116      0.94412
      0.42858      0.66123      0.81019      0.44423
      0.16442      0.28364      0.45376      0.77544
      0.75681      0.94352      0.88576      0.96217

--- Factorize A into QR ---

Matrix Q:
      0.12124      0.19509      0.63706      0.33019
      0.60971     -0.66279      0.35825     -0.15073
      0.56551     -0.00653     -0.62063      0.33094
      0.26243      0.44288      0.20063     -0.48154
      0.10067      0.20307      0.19749      0.70507
      0.46340      0.53406     -0.03716     -0.17240

Matrix R:
      1.63316      0.99462      1.33122      1.51916
      0.00000      0.90366      0.57494      0.69943
      0.00000      0.00000      1.02785      0.19057
      0.00000      0.00000      0.00000      0.62806


--- Check that R is upper triangular ---

TEST: Is R upperâ€‘triangular? RESULT: Yes.

--- Check that Qáµ€Q â‰ˆ I ---

Matrix Qáµ€Q:
      1.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      1.00000

TEST: is Qáµ€Q the identity matrix (within a tolerance of 1E-12)? 
RESULT: Yes.

--- Check that QR â‰ˆ A ---

Matrix QR:
      0.19800      0.29688      0.92835      0.64941
      0.99576      0.00749      0.79883      0.43628
      0.92357      0.55658      0.11116      0.94412
      0.42858      0.66123      0.81019      0.44423
      0.16442      0.28364      0.45376      0.77544
      0.75681      0.94352      0.88576      0.96217

TEST: is QR = A?
RESULT: Yes  (|maximum difference| = 1.110E-016)

------ Check that "solve" works as intended ------

--- Generate a random square matrix A (4Ã—4) ---

Matrix A:
      0.08808      0.79533      0.93464      0.35652
      0.93973      0.95410      0.53096      0.75455
      0.51430      0.35427      0.82514      0.55936
      0.83938      0.91358      0.27656      0.89726

--- Generate a random vector b (4) ---

Vector b:
      0.45001
      0.45240
      0.28560
      0.15379


--- Factorize A into QR --- 

Matrix Q:
      0.06458      0.96799      0.24253      0.00048
      0.68906     -0.01898     -0.10632     -0.71661
      0.37711     -0.24103      0.86110      0.24124
      0.61548      0.06736     -0.43402      0.65443

Matrix R:
      1.36378      1.40468      0.90761      1.30614
      0.00000      0.72791      0.71439      0.25640
      0.00000      0.00000      0.76073      0.09847
      0.00000      0.00000      0.00000      0.18158


--- Solve QRx=b ---

Solving QRx=b leads to:

Vector x:
      0.52986
      0.38793
      0.42588
     -0.85054


--- Check that Axâ‰ˆb ---

Vector Ax:
      0.45001
      0.45240
      0.28560
      0.15379

TEST: is Ax=b (within a tolerance of 1E-12)?
RESULT: OK

------------ TASK B: Matrix inverse by Gram-Schmidt QR factorization ------------

------ Check that "inverse" works as intended ------

--- Generate a random square matrix A (4Ã—4) ---

Matrix A:
      0.59672      0.97108      0.98132      0.39865
      0.69969      0.12138      0.06074      0.84995
      0.41853      0.71709      0.39403      0.05518
      0.07951      0.38434      0.79549      0.03308


--- Factorize A into QR ---

Matrix Q:
      0.58879      0.48533      0.10526      0.63773
      0.69039     -0.68724      0.17479     -0.14324
      0.41297      0.38485     -0.59059     -0.57667
      0.07845      0.37953      0.78075     -0.49013

Matrix R:
      1.01347      0.98184      0.84485      0.84689
      0.00000      0.80972      0.88807     -0.35685
      0.00000      0.00000      0.50228      0.18376
      0.00000      0.00000      0.00000      0.08445


--- Calculate B, which is the inverse of A ---

Matrix B:
    -10.11867      3.86669      8.87137      7.79298
      6.72773     -2.65850     -3.98454     -6.12272
     -2.55325      0.96854      1.32247      3.67779
      7.55152     -1.69613     -6.82851     -5.80374


--- Check that ABâ‰ˆI, where I is the identity matrix ---

Matrix AB:
      1.00000      0.00000      0.00000      0.00000
      0.00000      1.00000      0.00000      0.00000
      0.00000      0.00000      1.00000      0.00000
      0.00000      0.00000      0.00000      1.00000

TEST: is AB the identity matrix (within a tolerance of 1E-12)? 
RESULT: Yes.

------------ TASK C: Operations count for QR-decomposition ------------

------ Measure the time it takes to QR-factorize a random NxN matrix as function of N ------

out.times.data contains the data on how long it takes to QR-factorize a random NxN matrix.
QR_factorize_time.svg is a plot showing how long it takes to QR-factorize a random NxN matrix, using the data from out.times.data.
The time it takes to QR-factorize grows like O(NÂ³), as shown by the fit in QR_factorize_time.svg.

------------ POINTS: received from tasks A, B, and C ------------

Task A completed â†’ 6 pointsðŸ˜Š
Task B completed â†’ 3 pointsðŸ˜„
Task C completed â†’ 1 point ðŸ˜Ž

In total, this exercise results in 10 points ðŸŽ‰ðŸŽ‰ðŸŽ‰
