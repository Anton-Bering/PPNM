------------ TASK A: Function Approximation ------------

------ Train the network to approximate some function ------
------ And sampled at several points on [-1,1] ------

--- Function to approximate: g(x)=Cos(5*x-1)*Exp(-x*x) ---

Initial cost = 39.872730, Final cost = 0.000005

Netwerk (g_n) vs exact value (g_e):
  x:         g_n(x):        g_e(x):      error:
 -1.00       0.354207       0.353227     0.000980
 -0.50      -0.729299      -0.729313     0.000015
  0.00       0.540458       0.540302     0.000155
  0.50       0.054906       0.055090    -0.000185
  1.00      -0.240808      -0.240462    -0.000345

Data saved as function_g.txt
Plot saved as function_g.svg

------------ TASK B: Derivatives and Anti-derivative ------------

------ Train the network to give first and second derivatives ------
------ And also the anti-derivative ------

Netwerk (g_n') vs exact value (g_e'):
  x:         g_n'(x):       g_e'(x):     error:
 -1.00       0.144542       0.192498  -0.047956
 -0.50      -2.090295      -2.095264   0.004970
  0.00       4.204723       4.207355  -0.002632
  0.50      -3.938684      -3.939340   0.000655
  1.00       1.849358       1.872984  -0.023626

Netwerk (g_n'') vs exact value (g_e''):
  x:         g_n''(x):      g_e''(x):     error:
 -1.00      -9.275527     -10.180043   0.904516
 -0.50      16.216756      16.230241  -0.013485
  0.00     -14.632356     -14.588162  -0.044193
  0.50       6.398296       6.336154   0.062142
  1.00      -0.619556      -0.037614  -0.581942

Netwerk (∫dx g_n) vs exact value (∫dx g_e ≈ numerically integrated):
  x:         ∫dx g_n(x):        ∫dx g_e(x):      error:
 -1.00           0.000000           0.000000   0.000000
 -0.50          -0.028940          -0.028912  -0.000028
  0.00          -0.234209          -0.234206  -0.000003
  0.50           0.111584           0.111596  -0.000012
  1.00          -0.074522          -0.074514  -0.000007

Data saved as derivatives_and_anti_derivative_g.txt
Plot saved as first_derivatives_g.svg
Plot saved as second_derivatives_g.svg
Plot saved as anti_derivative.svg

------------ TASK C: Differential Equation Solution Approximation ------------

------ Solving y'' + y = 0 ------

Initial cost = 60.787823, Final cost = 0.000069
Boundary check: Φ_n(0) = 0.000000 (target 0.00), Φ_n'(0) = 0.999999 (target 1.00)
Sample solution values vs sin(x):
    x        Φ_n(x)    Φ_e=sin(x)   error
  0.00       0.000000         0.000000    0.000000
  0.52       0.500054         0.500000    0.000054
  0.79       0.707268         0.707107    0.000161
  1.57       1.000289         1.000000    0.000289
  3.14       0.000288         0.000000    0.000288

Data saved as differential_equation_phi1.txt
Data saved as differential_equation_residual_phi1.txt

------ Solving y'' + sin(x)y' + cos(x)y = x ------

Initial cost = 183.357684, Final cost = 0.011137
Boundary check: Φ_n(0) = 0.002103 (target 0.00), Φ_n'(0) = 1.005969 (target 1.00)
Sample solution values:
    x        Φ_n(x)
  0.00       0.002103
  0.52       0.506099
  0.79       0.727442
  1.57       1.342703
  3.14       5.244640

Data saved as differential_equation_phi2.txt
Data saved as differential_equation_residual_phi2.txt
