------------ TASK A: Function Approximation ------------

------ Train the network to approximate some function ------
------ And sampled at several points on [-1,1] ------

--- Function to approximate: g(x)=Cos(5*x-1)*Exp(-x*x) ---

Initial cost = 43.012016, Final cost = 0.000170

Netwerk (g_n) vs exact value (g_e):
  x:         g_n(x):        g_e(x):      error:
 -1.00       0.355209       0.353227     0.001982
 -0.50      -0.728947      -0.729313     0.000366
  0.00       0.537846       0.540302    -0.002456
  0.50       0.056159       0.055090     0.001069
  1.00      -0.240568      -0.240462    -0.000106

Data saved as function_g.txt
Plot saved as function_g.svg

------------ TASK B: Derivatives and Anti-derivative ------------

------ Train the network to give first and second derivatives ------
------ And also the anti-derivative ------

Netwerk (g_n') vs exact value (g_e'):
  x:         g_n'(x):       g_e'(x):     error:
 -1.00       0.098203       0.192498  -0.094295
 -0.50      -2.094239      -2.095264   0.001025
  0.00       4.211609       4.207355   0.004254
  0.50      -3.940717      -3.939340  -0.001378
  1.00       1.828115       1.872984  -0.044869

Netwerk (g_n'') vs exact value (g_e''):
  x:         g_n''(x):      g_e''(x):     error:
 -1.00      -8.163824     -10.180043   2.016219
 -0.50      16.103655      16.230241  -0.126585
  0.00     -14.513300     -14.588162   0.074862
  0.50       6.307991       6.336154  -0.028163
  1.00      -1.724910      -0.037614  -1.687296

Netwerk (∫dx g_n) vs exact value (∫dx g_e ≈ numerically integrated):
  x:         ∫dx g_n(x):        ∫dx g_e(x):      error:
 -1.00           0.000000           0.000000   0.000000
 -0.50          -0.028762          -0.028912   0.000150
  0.00          -0.234917          -0.234206  -0.000710
  0.50           0.110890           0.111596  -0.000705
  1.00          -0.074922          -0.074514  -0.000408

Data saved as derivatives_and_anti_derivative_g.txt
Plot saved as first_derivatives_g.svg
Plot saved as second_derivatives_g.svg
Plot saved as anti_derivative.svg

------------ TASK C: Differential Equation Solution Approximation ------------

------ Solving y'' + y = 0 ------

Initial cost = 208.617510, Final cost = 0.000380
Boundary check: Φ_n(0) = 0.000037 (target 0.00), Φ_n'(0) = 0.998512 (target 1.00)
Sample solution values vs sin(x):
    x        Φ_n(x)    Φ_e=sin(x)   error
  0.00       0.000037         0.000000    0.000037
  0.52       0.499565         0.500000   -0.000435
  0.79       0.706476         0.707107   -0.000631
  1.57       1.000168         1.000000    0.000168
  3.14       0.001160         0.000000    0.001160

Data saved as differential_equation_phi1.txt
Data saved as differential_equation_residual_phi1.txt

------ Solving y'' + sin(x)y' + cos(x)y = x ------

Initial cost = 131.113910, Final cost = 0.001223
Boundary check: Φ_n(0) = 0.000991 (target 0.00), Φ_n'(0) = 0.998184 (target 1.00)
Sample solution values:
    x        Φ_n(x)
  0.00       0.000991
  0.52       0.501957
  0.79       0.721318
  1.57       1.334585
  3.14       5.261561

Data saved as differential_equation_phi2.txt
Data saved as differential_equation_residual_phi2.txt
