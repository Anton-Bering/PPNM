###################################################################################
############ Testing the implementation on functions with known minima ############
###################################################################################

------------ Quadratic function ------------

Expected minimum: [0 0]
Accuracy goal (acc): 1E-06
Start point (x_start): [1 1]

--- Results for Broyden's update ---
Found minimum (x_min):                    [0 0]
Value at minimum, f(x_min):               0
Gradient norm at x_min:                   0  (should be < acc)
Number of iterations:                     1  (lower is better)
Number of resets:                         0  (lower is better)
Length of last accepted step (λ_last):    0.5  (ideally ≈ 1)
Number of evaluations:                    12  (lower is better)

Does the found minimum agree with expectation? YES.

--- Results for Symmetrized Broyden's update ---
Found minimum (x_min):                    [0 0]
Value at minimum, f(x_min):               0
Gradient norm at x_min:                   0  (should be < acc)
Number of iterations:                     1  (lower is better)
Number of resets:                         0  (lower is better)
Length of last accepted step (λ_last):    0.5  (ideally ≈ 1)
Number of evaluations:                    12  (lower is better)

Does the found minimum agree with expectation? YES.

--- Comparison Summary: Broyden vs Symmetrized Broyden ---

0. Accuracy (did the method find the correct minimum?):
   >> Tie. Both methods found the correct minimum.

1. Quality of the found minimum (lower f_min is better):
   >> Tie. Both methods found minima of similar quality.

2. Efficiency (fewer function evaluations is better):
   Efficiency Speedup (Broyden Evals / Symmetrized Evals): 1.00
   >> Tie. Both methods had a similar efficiency.

3. Robustness (fewer resets and successful convergence indicates stability):
   >> Tie. Both methods were equally robust.

Overall Verdict:
Both methods performed identically on this task.

------------ Rosenbrock's valley function ------------

Expected minimum: [1 1]
Accuracy goal (acc): 1E-06
Start point (x_start): [-1.2 1]

--- Results for Broyden's update ---
Found minimum (x_min):                    [1 1]
Value at minimum, f(x_min):               1.17136817701495E-20
Gradient norm at x_min:                   4.78603647126985E-09  (should be < acc)
Number of iterations:                     395  (lower is better)
Number of resets:                         4  (lower is better)
Length of last accepted step (λ_last):    1  (ideally ≈ 1)
Number of evaluations:                    5200  (lower is better)

Does the found minimum agree with expectation? YES.

--- Results for Symmetrized Broyden's update ---
Found minimum (x_min):                    [1 1]
Value at minimum, f(x_min):               3.1820528225396E-18
Gradient norm at x_min:                   4.69155913709529E-08  (should be < acc)
Number of iterations:                     34  (lower is better)
Number of resets:                         1  (lower is better)
Length of last accepted step (λ_last):    1  (ideally ≈ 1)
Number of evaluations:                    228  (lower is better)

Does the found minimum agree with expectation? YES.

--- Comparison Summary: Broyden vs Symmetrized Broyden ---

0. Accuracy (did the method find the correct minimum?):
   >> Tie. Both methods found the correct minimum.

1. Quality of the found minimum (lower f_min is better):
   >> Winner: Broyden. Found a significantly better minimum (1.1714E-20 vs 3.1821E-18).

2. Efficiency (fewer function evaluations is better):
   Efficiency Speedup (Broyden Evals / Symmetrized Evals): 22.81
   >> Winner: Symmetrized Broyden. Was significantly more efficient.

3. Robustness (fewer resets and successful convergence indicates stability):
   >> Winner: Symmetrized Broyden. Was more stable (1 vs 4 resets).

Overall Verdict:
The WINNER is Broyden's update, as it found a minimum of significantly higher quality.

------------ Himmelblau's function ------------

Expected minimum: [3 2]
Accuracy goal (acc): 1E-06
Start point (x_start): [0 0]

--- Results for Broyden's update ---
Found minimum (x_min):                    [3 2]
Value at minimum, f(x_min):               2.80479745626465E-17
Gradient norm at x_min:                   5.91544552261804E-08  (should be < acc)
Number of iterations:                     15  (lower is better)
Number of resets:                         0  (lower is better)
Length of last accepted step (λ_last):    1  (ideally ≈ 1)
Number of evaluations:                    143  (lower is better)

Does the found minimum agree with expectation? YES.

--- Results for Symmetrized Broyden's update ---
Found minimum (x_min):                    [3 2]
Value at minimum, f(x_min):               1.42834105056552E-19
Gradient norm at x_min:                   3.79244985896579E-09  (should be < acc)
Number of iterations:                     10  (lower is better)
Number of resets:                         0  (lower is better)
Length of last accepted step (λ_last):    1  (ideally ≈ 1)
Number of evaluations:                    76  (lower is better)

Does the found minimum agree with expectation? YES.

--- Comparison Summary: Broyden vs Symmetrized Broyden ---

0. Accuracy (did the method find the correct minimum?):
   >> Tie. Both methods found the correct minimum.

1. Quality of the found minimum (lower f_min is better):
   >> Winner: Symmetrized Broyden. Found a significantly better minimum (1.4283E-19 vs 2.8048E-17).

2. Efficiency (fewer function evaluations is better):
   Efficiency Speedup (Broyden Evals / Symmetrized Evals): 1.88
   >> Winner: Symmetrized Broyden. Was significantly more efficient.

3. Robustness (fewer resets and successful convergence indicates stability):
   >> Tie. Both methods were equally robust.

Overall Verdict:
The WINNER is Symmetrized Broyden's update, as it found a minimum of significantly higher quality.

------------ Quadratic function in 8D ------------

Expected minimum: [0 0 0 0 0 0 0 0]
Accuracy goal (acc): 1E-06
Start point (x_start): [1 1 1 1 1 1 1 1]

--- Results for Broyden's update ---
Found minimum (x_min):                    [7.45058E-09 7.45058E-09 7.45058E-09 7.45058E-09 7.45058E-09 7.45058E-09 7.45058E-09 7.45058E-09]
Value at minimum, f(x_min):               4.44089209850063E-16
Gradient norm at x_min:                   4.2146848510894E-08  (should be < acc)
Number of iterations:                     1  (lower is better)
Number of resets:                         0  (lower is better)
Length of last accepted step (λ_last):    0.5  (ideally ≈ 1)
Number of evaluations:                    36  (lower is better)

Does the found minimum agree with expectation? YES.

--- Results for Symmetrized Broyden's update ---
Found minimum (x_min):                    [7.45058E-09 7.45058E-09 7.45058E-09 7.45058E-09 7.45058E-09 7.45058E-09 7.45058E-09 7.45058E-09]
Value at minimum, f(x_min):               4.44089209850063E-16
Gradient norm at x_min:                   4.2146848510894E-08  (should be < acc)
Number of iterations:                     1  (lower is better)
Number of resets:                         0  (lower is better)
Length of last accepted step (λ_last):    0.5  (ideally ≈ 1)
Number of evaluations:                    36  (lower is better)

Does the found minimum agree with expectation? YES.

--- Comparison Summary: Broyden vs Symmetrized Broyden ---

0. Accuracy (did the method find the correct minimum?):
   >> Tie. Both methods found the correct minimum.

1. Quality of the found minimum (lower f_min is better):
   >> Tie. Both methods found minima of similar quality.

2. Efficiency (fewer function evaluations is better):
   Efficiency Speedup (Broyden Evals / Symmetrized Evals): 1.00
   >> Tie. Both methods had a similar efficiency.

3. Robustness (fewer resets and successful convergence indicates stability):
   >> Tie. Both methods were equally robust.

Overall Verdict:
Both methods performed identically on this task.

------------ Rosenbrock's valley function in 8D ------------

Expected minimum: [1 1 1 1 1 1 1 1]
Accuracy goal (acc): 1E-06
Start point (x_start): [-1.2 1 -1.2 1 -1.2 1 -1.2 1]

--- Results for Broyden's update ---
Found minimum (x_min):                    [1 1 1 1 0.999999 0.999998 0.999997 0.999993]
Value at minimum, f(x_min):               1.6298135659808E-11
Gradient norm at x_min:                   7.2888652892073E-06  (should be < acc)
Number of iterations:                     10000  (lower is better)
Number of resets:                         1191  (lower is better)
Length of last accepted step (λ_last):    0.0009765625  (ideally ≈ 1)
Number of evaluations:                    272399  (lower is better)

Does the found minimum agree with expectation? NO.

--- Results for Symmetrized Broyden's update ---
Found minimum (x_min):                    [1 1 1 1 1 1 1 1]
Value at minimum, f(x_min):               5.25964706136631E-16
Gradient norm at x_min:                   1.29068014946382E-06  (should be < acc)
Number of iterations:                     73  (lower is better)
Number of resets:                         1  (lower is better)
Length of last accepted step (λ_last):    1  (ideally ≈ 1)
Number of evaluations:                    1404  (lower is better)

Does the found minimum agree with expectation? YES.

--- Comparison Summary: Broyden vs Symmetrized Broyden ---

0. Accuracy (did the method find the correct minimum?):
   >> Winner: Symmetrized Broyden. Found the correct minimum where the other failed.

1. Quality of the found minimum (lower f_min is better):
   >> Winner: Symmetrized Broyden. Found a significantly better minimum (5.2596E-16 vs 1.6298E-11).

2. Efficiency (fewer function evaluations is better):
   Efficiency Speedup (Broyden Evals / Symmetrized Evals): 194.02
   >> Winner: Symmetrized Broyden. Was significantly more efficient.

3. Robustness (fewer resets and successful convergence indicates stability):
   >> Winner: Symmetrized Broyden. Converged where Broyden failed.

Overall Verdict:
The WINNER is Symmetrized Broyden's update, as it was the only one to find the correct minimum.

##################################################################################
############ Applying the implementation to more complicated problems ############
##################################################################################

------------ Higgs Boson Fit ------------

Accuracy goal (acc): 1E-06
Start point (x_start): [125 2 10]

--- Results for Broyden's update ---
Found minimum (x_min):                    [125.972 2.08633 9.87621]
Value at minimum, f(x_min):               26.8695117786709
Gradient norm at x_min:                   2.69112588810939E-07  (should be < acc)
Number of iterations:                     53  (lower is better)
Number of resets:                         1  (lower is better)
Length of last accepted step (λ_last):    1  (ideally ≈ 1)
Number of evaluations:                    556  (lower is better)

--- Results for Symmetrized Broyden's update ---
Found minimum (x_min):                    [125.972 2.08633 9.87622]
Value at minimum, f(x_min):               26.8695117786711
Gradient norm at x_min:                   2.12035778016702E-06  (should be < acc)
Number of iterations:                     30  (lower is better)
Number of resets:                         0  (lower is better)
Length of last accepted step (λ_last):    1  (ideally ≈ 1)
Number of evaluations:                    288  (lower is better)

--- Comparison Summary: Broyden vs Symmetrized Broyden ---

1. Quality of the found minimum (lower f_min is better):
   >> Tie. Both methods found minima of similar quality.

2. Efficiency (fewer function evaluations is better):
   Efficiency Speedup (Broyden Evals / Symmetrized Evals): 1.93
   >> Winner: Symmetrized Broyden. Was significantly more efficient.

3. Robustness (fewer resets and successful convergence indicates stability):
   >> Winner: Symmetrized Broyden. Was more stable (0 vs 1 resets).

Overall Verdict:
With equal solution quality, Symmetrized Broyden's update wins by being more robust.

>> Generated higgs_data.txt and higgs_fit_curve.txt for plotting with the best parameters found.

------------ Artificial Neural Network Training ------------

Attempting 10 random starts for each method to find a good minimum...

--- Running for: Broyden's update ---
  >> Best found minimum value f(x_min) for this method: 8.74374959817862E-06

--- Running for: Symmetrized Broyden's update ---
  >> Best found minimum value f(x_min) for this method: 8.03776092481897E-06


--- Best overall results found after all attempts ---
--- Results for Broyden's update ---
Value at best minimum, f(x_min):          8.74374959817862E-06
Average evaluations over 10 runs:   354947.90
Success Rate:                             1/10 runs converged

--- Results for Symmetrized Broyden's update ---
Value at best minimum, f(x_min):          8.03776092481897E-06
Average evaluations over 10 runs:   188468.70
Success Rate:                             6/10 runs converged

--- Broyden vs Symmetrized Broyden (for ANN) ---

Robustness (higher success rate is better):
  Broyden Success Rate:           1/10
  Symmetrized Success Rate:       6/10

Quality of best minimum (lower is better):
  Broyden:           8.74374959817862E-06
  Symmetrized:       8.03776092481897E-06

Average efficiency over 10 runs (lower is better):
  Avg. Evals Broyden:           354947.90
  Avg. Evals Symmetrized:       188468.70

Overall Verdict for ANN Training:
The WINNER is Symmetrized Broyden's update due to its significantly higher success rate, making it more reliable.

>> Generated ann_approximation.txt for plotting with the best overall parameters found.

#############################################################################
### Is the implementation of the symmetrized Broyden's update better?     ###
#############################################################################

--- Final Scorecard across 7 tests ---

Symmetrized Broyden's update wins: 4
Broyden's update wins:             1
Ties:                              2

--- Final Conclusion ---

YES, the Symmetrized Broyden's update is better for most problems, although the standard Broyden's update was better in some cases.

All tasks completed.
