############ Generel Makefile-skabelon ############

# Finder f√∏rst en C#-kompiler: pr√∏ver 'csc', ellers bruges 'mcs' (Mono):
CS := $(shell command -v csc 2>/dev/null || command -v mcs 2>/dev/null)

# Fejlbesked hvis ingen C#-kompiler blev fundet:
ifndef CS
$(error No C# compiler found üò≠)
endif

# Navne p√• output-filer:
EXE      := Main.exe        
OUT      := Out.txt         
GNUPLOT  := plot.gpi        
PLOTS    := PLOT_1.svg PLOT_2.svg
DATA     := DATA_1.txt DATA_2.txt

# kildefiler (.cs):
SRC      := Main.cs KILDEFIL_1.cs KILDEFIL_2.cs

# Eventuelle .dll-biblioteker
LIBS     := BIBLOTEK_1.dll IBLOTEK_1.dll

###### Regler for hvordan projektet bygges ######

# Bliver k√∏rt n√•r man skriver 'make':
all: $(PLOTS) $(OUT) $(NOGET_1) $(NOGET_2)

# Regler til at bygge 'exe-fil' fra .cs-filer & .dll-biblioteker
%.exe: %.cs $(LIBS)
	$(CS) -target:exe -out:$@ $(filter %.cs,$^) $(addprefix -reference:,$(filter %.dll,$^))

# Regler til at bygge .dll-fil fra .cs-fil
%.dll: %.cs
	$(CS) -target:library -out:$@ $<

# K√∏r programmet og gem output i Out.txt:
$(OUT): $(EXE)
	mono $(EXE) > $(OUT)

# Regel til at generere datafil (hvis n√∏dvendigt):
$(DATA): $(EXE)
	mono $(EXE) --output $(DATA)

# Brug gnuplot til at lave plot fra data og script:
%.svg: %.txt $(GNUPLOT)
	gnuplot -e "set terminal svg background 'white'; set output '$@'; load '$(GNUPLOT)'"

###### Ryd op n√•r man skriver 'make clean' ######

clean:
	-rm -f *.exe *.dll *.svg *.txt *.log $(OUT) $(DATA)

.PHONY: all clean
